# A docker image for starting a frontend that can be used to search the literature database DBLP.
#
# Build a container with: docker build -f Dockerfile.frontend-dblp --build-arg BACKEND_HOST=<BACKEND_HOST> --build-arg BACKEND_PORT=<BACKEND_PORT> -t completesearch:frontend-dblp .
# Run the container with: docker run -p 0.0.0.0:<FRONTEND_PORT>:80 -it completesearch:frontend-dblp
#
# =================================================================================================

FROM php:7.3.6-apache

# =================================================================================================

# Install some extra Apache modules.
RUN a2enmod proxy \
  && a2enmod proxy_http \
  && a2enmod rewrite \
  && a2enmod headers

RUN apt update && apt install -y vim

# =================================================================================================

ARG DB=enquete

# Copy the required files into the container.
COPY ./codebase/userinterface/autocomplete-php /userinterface

# Copy configuration files for UI and Apache to the right locations.
COPY ./applications/${DB}/config.php /userinterface/autocomplete_config.php
COPY ./applications/${DB}/style.css /userinterface/autocomplete.css
COPY ./applications/${DB}/apache.conf /etc/apache2/sites-available/apache.conf

# Create log files (the PHP code crashes otherwise)
# RUN touch /log/${DB}.access_log
# RUN chmod 777 /log/${DB}.access_log
# RUN touch /log/${DB}.error_log
# RUN chmod 777 /log/${DB}.error_log

# =================================================================================================
# Patch configuration files
#
# NOTE: The configuration files are currently all mounted via -v, so can be
# edited outside the docker container.

# In PHP 5.4., the handling of warnings has changed. So now, there is an warning if you try to
# access an object which wasn't initialized yet, see
# https://stackoverflow.com/questions/8900701/creating-default-object-from-empty-value-in-php.
# This is crucial for ./search/autocomplete_config.php; so patch the file such that the object
# "$config" is correctly initialized.
# NOTE: The single quotes (instead of double quotes) are important because otherwise, "$php" and
# "$config" is interpreted as a Docker argument.
# RUN sed -i 's#<?php#<?php\nif (!isset($config)) $config = new stdClass();\n#g' ./search/autocomplete_config.php

# Fix the backend host and port in the Apache config.
# RUN sed -i "s#http://localhost:8181#http://${BACKEND_HOST}:${BACKEND_PORT}#g" /configuration/apache.conf

# =================================================================================================
# Deploy the files to the Apache webserver.

WORKDIR /

# Make the frontend files available to Apache.
RUN ln -s /userinterface /var/www/html/completesearch-ui

# Disable the default Apache config and enable the config required by the frontend.
RUN a2dissite 000-default.conf
RUN a2ensite apache.conf

CMD ["/bin/bash", "-c", "service apache2 start && bash"]
