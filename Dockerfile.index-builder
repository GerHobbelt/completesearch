# A docker image for building a CompleteSearch index.
#
# Build a container with: docker build -f Dockerfile.index-builder -t completesearch:index-builder .
# Run the container with: docker run -e DB=<DB> -v <DATA_DIR>:/data -it completesearch:index-builder
#
# =================================================================================================

FROM alpine:3.9.4

# The name of the database to parse (must correspond to the name of a folder in ./databases).
ARG DB=dblp

# =================================================================================================
# Install some dependencies from the standard package manager.

RUN apk add --no-cache \
		# Bash (needed for console output etc.).
		bash \
	  # Meta-package with gcc, libc-dev, etc. (needed for compiling the code).
    build-base \
		# Git (needed to download the source code of STXXL below).
	  git \
	  # Expat library (needed to parse XML files).
		expat-dev \
		# Linux headers (needed for installing Boost below).
	  linux-headers \
		# Perl (needed for e.g., producing console output).
		perl \
	  # Google Hash Map (needed for the index).
	  sparsehash \
	  # Compression library.
	  zlib-dev

# =================================================================================================
# Install some (specific) dependencies from scratch.

RUN mkdir -p /opt
WORKDIR /opt

# CompleteSearch requires STXXL <= 1.3.1.
RUN git clone --branch 1.3.1 https://github.com/stxxl/stxxl.git
RUN cd stxxl && \
    make config_gnu && \
	  # Edit /utils/mlock.cpp so the code compiles with the latest version of gcc.
	  sed -i '20 i #include <ctime>' utils/mlock.cpp \
		&& sed -i '20 i #include <cerrno>' utils/mlock.cpp \
		&& sed -i 's/sleep(86400);/nanosleep((const struct timespec[]){{0, 864000L}}, NULL);/g' utils/mlock.cpp \
		&& make library_g++

# Install the Boost components 'system' and 'regex'.
RUN wget -q http://freefr.dl.sourceforge.net/project/boost/boost/1.66.0/boost_1_66_0.tar.gz
RUN tar -zxf boost_1_66_0.tar.gz
RUN cd boost_1_66_0 \
    && ./bootstrap.sh --with-libraries=system,regex \
    && ./bjam -d 0 release \
    && ./bjam -d 0 --includedir=/usr/include --libdir=/usr/lib install

# =================================================================================================

# Copy all required files into the container.
COPY ./codebase /codebase
COPY ./databases /databases

# The Makefile of CompleteSearch expects the bash under '/usr/local/bin/bash'.
RUN ln -s /bin/bash /usr/local/bin/bash

# Build all.
WORKDIR /codebase
RUN make clean-all build-all

# =================================================================================================

WORKDIR /databases

# Link /data (where to find the database files to parse and where to store the index files),
# and /codebase (where to find the compiled source code files of CompleteSearch)
# in the /databases/${DB} directory, compile the ${DB}-specific parser and build the index.
CMD ["/bin/sh", "-c", "ln -sfn /data ./${DB}/data && ln -sfn /codebase ./${DB}/codebase && make -C ./${DB} DB=data/${DB} PARSER=./${DB}.parser ${DB}.parser pall"]
